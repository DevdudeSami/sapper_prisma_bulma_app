version: '3'
services:
  prisma:
    depends_on: 
      - postgres
    image: prismagraphql/prisma:1.34.10
    restart: always
    ports:
      - '4466:4466'
    environment:
      PRISMA_CONFIG: |
        managementApiSecret: ${PRISMA_MANAGEMENT_API_SECRET:-prismamanagesecret}
        port: 4466
        databases:
          default:
            connector: postgres
            host: postgres
            port: 5432
            user: prisma
            password: prisma

  gql-api:
    depends_on: 
      - prisma
    build: 
      context: ./db
    restart: on-failure
    ports:
      - '4000:4000'
    volumes:
      - ./db:/db 
    environment: 
      PORT: 4000
      PRISMA_MANAGEMENT_API_SECRET: ${PRISMA_MANAGEMENT_API_SECRET:-prismamanagesecret}
      PRISMA_SECRET: ${PRISMA_SECRET:-prisma_secret}
      JWT_SECRET: ${JWT_SECRET:-jwt_secret}

  postgres:
    image: postgres:10.3
    restart: always
    environment:
      POSTGRES_USER: prisma
      POSTGRES_PASSWORD: prisma
    volumes:
      - postgres:/var/lib/postgresql/data

  redis:
    image: redis:alpine
    ports:
      - '127.0.0.1:6379:6379'

  minio:
    image: minio/minio
    volumes:
      - data:/data
    ports:
      - "9000:9000"
    environment:
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY:-minioadmin}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY:-minioadmin}
    command: server /data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  miniobuckets:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config host add myminio http://minio:9000 ${MINIO_ACCESS_KEY:-minioadmin} ${MINIO_SECRET_KEY:-minioadmin};
      /usr/bin/mc mb myminio/files;
      /usr/bin/mc policy set download myminio/files;
      exit 0;
      "

  sapper:
    depends_on: 
      - redis
      - miniobuckets
      - gql-api
    build:
      context: ./sapper
      args:
        PRISMA_URI: ${PRISMA_URI:-http://gql-api:4000}
        PORT: 3000
    restart: on-failure
    ports:
      - "10000:10000"
      - "3000:3000"
    environment:
      GQL_API_KEY: "${GQL_API_KEY:-gqlapikey}"
      GQL_API_SERVER: "${GQL_API_SERVER:-http://gql-api:4000}"
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY:-minioadmin}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY:-minioadmin}
    volumes: 
      - ./sapper:/sapper

volumes:
  postgres: ~
  data:
